{# Templates #}
{% set iconTemplate          = 'partials/svg-icon.html.twig' %}
{% set buttonTemplate        = 'partials/elements/button.html.twig' %}
{% set selectTemplate        = 'partials/elements/select.html.twig' %}
{% set sliderTemplate        = 'partials/elements/range-slider.html.twig' %}

{# Classes #}
{% set iconFavId             = 'icon__favorite-selected' %}
{% set iconHamId             = 'icon__hamburger-nav' %}
{% set iconGridId            = 'icon__grid' %}
{% set buttonClassGold       = 'is-gold is-marginless is-button-100' %}
{% set buttonClassPrimary    = 'is-primary is-marginless' %}
{% set buttonClassGroup      = 'is-filter-button-group' %}
{% set buttonClassFav        = 'is-favorite-prop-filter' %}
{% set buttonClassFavClicked = 'is-favorite-prop-filter is-clicked' %}
{% set selectTemplateClass   = 'is-gold' %}

{# Labels #}
{% set selectPlaceholderOption = {
        text: "Select a Filter",
        value: "unselected",
        selected: true,
        disabled: true
} %}
{% set selectOptions = [selectPlaceholderOption] %}

{% set selectFilterOptions = [selectPlaceholderOption] %}
{% set sliderOptions = [] %}

{% set buttonFilterApplyLabel   = 'Apply' %}
{% set buttonPropLabel          = 'View *prop name*' %}

{# Slider Values #}
{% set sliderStep = 1 %}
{% set minSliderValue = 1 %}
{% set maxSliderValue = 300 %}
{% set initialValueSlider1 = 20 %}
{% set initialValueSlider2 = 120 %}

<!-- filter desktop range
TODO: Figure out the responsive on >1400px
-->

<property-filter inline-template>
    <div class="property-filter">
        <div class="columns">
            <div class="column is-3">
                <select-filter :options="filterOptions"
                               :selected="selectedFilterField"
                               :change-event="filterChangeEvent"
                               inline-template>
                    {% include selectTemplate with { inputClass: selectTemplateClass, options: selectOptions, vue: true } only %}
                </select-filter>
            </div>
            <div class="column is-3" v-if="showSlider">
                <range-slider :change-event="rangeSliderChangeEvent"
                              :values="rangeSliderValues"
                              :max-value="rangeSliderMaxValue"
                              :min-value="rangeSliderMinValue"
                              :step="rangeSliderStep"
                              inline-template>
                    {% include sliderTemplate %}
                </range-slider>
            </div>
            <div class="column is-3" v-if="showFilterOptions">
                <select-filter :options="selectedFilterOptions"
                               :selected="selectedFilterValue"
                               :change-event="filterValueChangeEvent"
                               inline-template>
                    {% include selectTemplate with { inputClass: selectTemplateClass, options: selectFilterOptions, vue: true } only %}
                </select-filter>
            </div>
            <div class="column is-1">
                {% include buttonTemplate with { class: buttonClassGold, content: buttonFilterApplyLabel } only %}
            </div>
            <div class="column is-3">
                {% include buttonTemplate with { class: buttonClassPrimary, content: buttonPropLabel } only %}
            </div>
            <div class="column is-2">
                <div class="columns is-hidden-touch is-gapless">
                    <div class="column is-8">
                        {% include buttonTemplate with {
                            class: buttonClassGroup,
                            addons: [{
                                iconClass: iconHamId
                            },{
                                iconClass: iconGridId,
                                disabled: true
                        }]} only %}
                    </div>
                    <div class="column is-4">
                        {% include buttonTemplate with { class: buttonClassFav, iconId: iconFavId } only %}
                    </div>
                </div>
            </div>
        </div>
    </div>
</property-filter>

